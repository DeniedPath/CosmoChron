[debug] [2025-03-19T02:05:30.537Z] ----------------------------------------------------------------------
[debug] [2025-03-19T02:05:30.542Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Launchpad\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2025-03-19T02:05:30.543Z] CLI Version:   13.34.0
[debug] [2025-03-19T02:05:30.543Z] Platform:      win32
[debug] [2025-03-19T02:05:30.543Z] Node Version:  v22.14.0
[debug] [2025-03-19T02:05:30.544Z] Time:          Tue Mar 18 2025 22:05:30 GMT-0400 (Eastern Daylight Time)
[debug] [2025-03-19T02:05:30.544Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-03-19T02:05:30.555Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-03-19T02:05:30.556Z] > authorizing via signed-in user (kristiangodinez1@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Launchpad\ai-timer

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2025-03-19T02:06:09.167Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:09.167Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:09.169Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2025-03-19T02:06:09.532Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2025-03-19T02:06:09.532Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project cosmochron-509fe (CosmoChron) 
[info] 
=== Dataconnect Setup
[debug] [2025-03-19T02:06:10.590Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:10.590Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:10.590Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/cosmochron-509fe/billingInfo [none]
[debug] [2025-03-19T02:06:10.832Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/cosmochron-509fe/billingInfo 200
[debug] [2025-03-19T02:06:10.832Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/cosmochron-509fe/billingInfo {"name":"projects/cosmochron-509fe/billingInfo","projectId":"cosmochron-509fe","billingAccountName":"","billingEnabled":false}
[info] i  dataconnect: ensuring required API sqladmin.googleapis.com is enabled... 
[debug] [2025-03-19T02:06:10.833Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:10.834Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:10.834Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com [none]
[debug] [2025-03-19T02:06:10.834Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:11.220Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com 200
[debug] [2025-03-19T02:06:11.220Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com [omitted]
[warn] !  dataconnect: missing required API sqladmin.googleapis.com. Enabling now... 
[debug] [2025-03-19T02:06:11.222Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:11.222Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:11.222Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com:enable [none]
[debug] [2025-03-19T02:06:11.222Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com:enable x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:11.913Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com:enable 200
[debug] [2025-03-19T02:06:11.913Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com:enable [omitted]
[debug] [2025-03-19T02:06:21.919Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:21.920Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:21.920Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com [none]
[debug] [2025-03-19T02:06:21.920Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:22.259Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com 200
[debug] [2025-03-19T02:06:22.259Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/sqladmin.googleapis.com [omitted]
[info] +  dataconnect: required API sqladmin.googleapis.com is enabled 
[info] +  Wrote dataconnect\dataconnect.yaml 
[info] +  Wrote dataconnect\schema\schema.gql 
[info] +  Wrote dataconnect\connector\connector.yaml 
[info] +  Wrote dataconnect\connector\queries.gql 
[info] +  Wrote dataconnect\connector\mutations.gql 
[info] +  Detected WEB app in directory C:\Users\Launchpad\ai-timer 
[info] i  Wrote new config to C:\Users\Launchpad\ai-timer\dataconnect\connector/connector.yaml 
[info] i  dataconnect: downloading dataconnect-emulator-1.8.5.exe... {"metadata":{"emulator":{"name":"dataconnect"},"message":"downloading dataconnect-emulator-1.8.5.exe..."}}
[debug] [2025-03-19T02:06:31.939Z] >>> [apiv2][query] GET https://storage.googleapis.com/firemat-preview-drop/emulator/dataconnect-emulator-windows-v1.8.5 
[debug] [2025-03-19T02:06:32.095Z] <<< [apiv2][status] GET https://storage.googleapis.com/firemat-preview-drop/emulator/dataconnect-emulator-windows-v1.8.5 200
[debug] [2025-03-19T02:06:32.095Z] <<< [apiv2][body] GET https://storage.googleapis.com/firemat-preview-drop/emulator/dataconnect-emulator-windows-v1.8.5 [stream]
[info] I0318 22:06:33.494589   20988 codegen.go:82] [connector "default" javascriptSdk] Generating sources into "C:\\Users\\Launchpad\\ai-timer\\dataconnect-generated\\js\\default-connector"
I0318 22:06:33.504316   20988 generate.go:40] Generated all sources. Writing them to disk...
I0318 22:06:33.516941   20988 collector.go:107] connector "default" javascriptSdk wrote into "C:\\Users\\Launchpad\\ai-timer\\dataconnect-generated\\js\\default-connector"
Generated sources: esm\index.esm.js [111B] index.cjs.js [147B] package.json [895B] react\index.d.ts [228B] react\package.json [468B] react\README.md [5443B] index.d.ts [246B] esm\package.json [17B] README.md [2800B] react\esm\package.json [17B] react\index.cjs.js [0B] react\esm\index.esm.js [0B] 
I0318 22:06:33.533659   20988 installsdk.go:76] Running command: C:\Program Files\nodejs\npm.cmd install file:dataconnect-generated\js\default-connector

[info] i  Generated SDK code for default 
[info] +  If you'd like to add more generated SDKs to your app your later, run firebase init dataconnect:sdk again 
[info] i  If you'd like to provision a CloudSQL Postgres instance on the Firebase Data Connect no-cost trial:
1. Please upgrade to the pay-as-you-go (Blaze) billing plan. Visit the following page:
     https://console.firebase.google.com/project/cosmochron-509fe/usage/details
2. Run firebase init dataconnect again to configure the Cloud SQL instance.
3. Run firebase deploy --only dataconnect to deploy your Data Connect service. 
[info] 
=== Genkit Setup
[debug] [2025-03-19T02:06:46.202Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-03-19T02:06:46.203Z] > authorizing via signed-in user (kristiangodinez1@gmail.com)
[debug] [2025-03-19T02:06:46.203Z] [iam] checking project cosmochron-509fe for permissions ["firebase.projects.get"]
[debug] [2025-03-19T02:06:46.203Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:46.203Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:46.204Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions [none]
[debug] [2025-03-19T02:06:46.204Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:46.204Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-03-19T02:06:46.353Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions 200
[debug] [2025-03-19T02:06:46.353Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-03-19T02:06:46.353Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:46.353Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:46.354Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:46.354Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:46.354Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com [none]
[debug] [2025-03-19T02:06:46.354Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:46.357Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com [none]
[debug] [2025-03-19T02:06:46.357Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:46.679Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com 200
[debug] [2025-03-19T02:06:46.679Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com [omitted]
[debug] [2025-03-19T02:06:47.139Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com 200
[debug] [2025-03-19T02:06:47.139Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com [omitted]
[debug] [2025-03-19T02:06:47.139Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:47.139Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:47.140Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com:enable [none]
[debug] [2025-03-19T02:06:47.140Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com:enable x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:47.673Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com:enable 200
[debug] [2025-03-19T02:06:47.673Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com:enable [omitted]
[debug] [2025-03-19T02:06:57.680Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:57.680Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:06:57.681Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com [none]
[debug] [2025-03-19T02:06:57.681Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:06:58.054Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com 200
[debug] [2025-03-19T02:06:58.055Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com [omitted]
[info] Let's create a new codebase for your functions.
[info] A directory corresponding to the codebase will be created in your project
[info] with sample code pre-configured.

[info] See https://firebase.google.com/docs/functions/organize-functions for
[info] more information on organizing your functions using codebases.

[info] Functions can be deployed with firebase deploy.

[info] +  Wrote functions/package.json 
[info] +  Wrote functions/.eslintrc.js 
[info] +  Wrote functions/tsconfig.json 
[info] +  Wrote functions/tsconfig.dev.json 
[info] +  Wrote functions/src/index.ts 
[info] +  Wrote functions/.gitignore 
[info] 
[info] i  genkit: Installing Genkit CLI version 1.2.0
 
[info] i  genkit: Installing NPM packages for genkit 
[info] +  genkit: Successfully installed NPM packages 
[info] i  genkit: Updating tsconfig.json 
[info] +  genkit: Successfully updated tsconfig.json 
[info] i  genkit: Updating package.json 
[info] +  genkit: Successfully updated package.json 
[info] i  genkit: Generating sample file 
[info] +  genkit: Successfully generated sample file (src/genkit-sample.ts) 
[info] 
Login to Google Cloud using:
[info]     gcloud auth application-default login --project undefined

[info] Then start the Genkit developer experience by running:
[info]     cd functions && npm run genkit:start
[info] 
=== Functions Setup
[debug] [2025-03-19T02:09:18.284Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-03-19T02:09:18.284Z] > authorizing via signed-in user (kristiangodinez1@gmail.com)
[debug] [2025-03-19T02:09:18.285Z] [iam] checking project cosmochron-509fe for permissions ["firebase.projects.get"]
[debug] [2025-03-19T02:09:18.285Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:09:18.285Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:09:18.285Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions [none]
[debug] [2025-03-19T02:09:18.285Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:09:18.285Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-03-19T02:09:18.661Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions 200
[debug] [2025-03-19T02:09:18.661Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/cosmochron-509fe:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-03-19T02:09:18.661Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:09:18.661Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:09:18.661Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:09:18.661Z] Checked if tokens are valid: true, expires at: 1742353516359
[debug] [2025-03-19T02:09:18.662Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com [none]
[debug] [2025-03-19T02:09:18.662Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:09:18.664Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com [none]
[debug] [2025-03-19T02:09:18.664Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com x-goog-quota-user=projects/cosmochron-509fe
[debug] [2025-03-19T02:09:19.006Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com 200
[debug] [2025-03-19T02:09:19.007Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/runtimeconfig.googleapis.com [omitted]
[debug] [2025-03-19T02:09:19.010Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com 200
[debug] [2025-03-19T02:09:19.010Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/cosmochron-509fe/services/cloudfunctions.googleapis.com [omitted]
[info] 
Detected existing codebase(s): default

[info] Let's create a new codebase for your functions.
[info] A directory corresponding to the codebase will be created in your project
[info] with sample code pre-configured.

[info] See https://firebase.google.com/docs/functions/organize-functions for
[info] more information on organizing your functions using codebases.

[info] Functions can be deployed with firebase deploy.

[info] +  Wrote idk/requirements.txt 
[info] +  Wrote idk/.gitignore 
[info] +  Wrote idk/main.py 
[debug] [2025-03-19T02:10:04.739Z] Running command with virtualenv: command="C:\Users\Launchpad\ai-timer\idk\venv\Scripts\activate.bat", args=["","&&","pip3","install","--upgrade","pip"]
[debug] [2025-03-19T02:10:08.730Z] Error: spawn "C:\Users\Launchpad\ai-timer\idk\venv\Scripts\activate.bat" ENOENT
    at notFoundError (C:\Users\Launchpad\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\cross-spawn\lib\enoent.js:6:26)
    at verifyENOENT (C:\Users\Launchpad\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\cross-spawn\lib\enoent.js:40:16)
    at cp.emit (C:\Users\Launchpad\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\cross-spawn\lib\enoent.js:27:25)
    at ChildProcess._handle.onexit (node:internal/child_process:293:12)
[error] 
[error] Error: An unexpected error has occurred.
